schema {
  query: Query
  mutation: Mutation
}
type Query {
  listAvailableRepositories(userId: Int!, sort: String, page: String): [GithubRepository!]!
}
type GithubRepository {
  id: Int!
  name: String!
  description: String
  html_url: String!
  clone_url: String!
  language: String
  source: String!
}
type Mutation {
  logout: Boolean!
  verifySession: UserAndAffiliations!
  verifyAnonymous: Boolean!
  createOrganization(name: String!, ownerID: Int!): BaseOrganizationType!
  onboardWithGithub(name: String!, code: String!): User!
  loginWithGithub(code: String!): User!
}
type UserAndAffiliations {
  user: User!
  organizations: [BaseOrganizationAndUserRole!]!
}
type User {
  id: Int!
  name: String!
  github: GithubUser
}
type GithubUser {
  id: Int!
  token: String!
}
type BaseOrganizationAndUserRole {
  id: Int!
  name: String!
  role: UserRole!
}
type BaseOrganizationType {
  id: Int!
  name: String!
}
enum UserRole {
  admin
  engineer
  viewer
}
"Exposes a URL that specifies the behavior of this scalar."
directive @specifiedBy(
    "The URL that specifies the behavior of this scalar."
    url: String!
  ) on SCALAR
