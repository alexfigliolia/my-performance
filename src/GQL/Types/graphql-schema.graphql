schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
type Query {
  installationSetup(platform: Platform!, installation_id: Int!): Installation!
  userAndAffiliations: UserAndAffiliations!
  trackedRepositories(organizationId: Int!): [TrackedRepository!]!
  listAvailableRepositories(page: String, type: InstallationType!, installation_id: Int!, sort: String, organization_name: String!): [AvailableRepository!]!
  listGithubUserRepositories(sort: String, page: String): [AvailableRepository!]!
  listGithubInstallationRepositories(page: String, installation_id: Int!): [AvailableRepository!]!
  listGithubOrganizationRepositories(page: String, installation_id: Int!, sort: String, organization_name: String!): [AvailableRepository!]!
}
type Installation {
  id: Int!
  installation_id: Int!
  platform: Platform!
  organizationId: Int
  type: InstallationType!
}
type UserAndAffiliations {
  id: Int!
  name: String!
  organizations: [OrgAffiliationType!]!
  github: GithubUserAuthorizationType
}
type OrgAffiliationType {
  id: Int!
  name: String!
  roles: [RoleType!]!
  installations: [Installation!]!
}
type RoleType {
  role: UserRole!
}
type GithubUserAuthorizationType {
  id: Int!
  token: String!
}
type TrackedRepository {
  id: Int!
  name: String!
  description: String!
  language: String!
  organizationId: Int!
  platform: Platform!
  api_url: String!
  html_url: String!
}
type AvailableRepository {
  name: String!
  description: String
  html_url: String!
  api_url: String!
  clone_url: String!
  language: String
  platform: Platform!
  platform_id: Int!
}
type Mutation {
  logout: Boolean!
  verifySession: Boolean!
  verifyAnonymous: Boolean!
  loginWithGithub(code: String!): User!
  createGithubAccount(code: String!, installation_id: Int!, name: String!): Boolean!
  trackRepository(name: String!, description: String!, language: String!, api_url: String!, html_url: String!, organizationId: Int!, platform: Platform!): TrackedRepository!
}
type User {
  id: Int!
  name: String!
}
type Subscription {
  installationSetup(platform: Platform!, installation_id: Int!): Installation!
}
enum Platform {
  github
  bitbucket
}
enum InstallationType {
  organization
  individual
}
enum UserRole {
  admin
  manager
  viewer
}
"Exposes a URL that specifies the behavior of this scalar."
directive @specifiedBy(
    "The URL that specifies the behavior of this scalar."
    url: String!
  ) on SCALAR
