{"version":3,"file":"index-mkbnnIuA.js","sources":["../../src/Components/LoginInput/index.tsx","../../src/Components/BasicLoader/index.tsx"],"sourcesContent":["import type { ChangeEventHandler, HTMLInputTypeAttribute } from \"react\";\nimport React, { Component } from \"react\";\nimport \"./styles.scss\";\n\nexport class LoginInput extends Component<Props, State> {\n  private input?: HTMLInputElement;\n  public state: State = { focused: !!this.props.value };\n  public static defaultProps = {\n    value: \"\",\n    type: \"text\",\n  };\n\n  public override componentDidMount() {\n    if (this.input) {\n      const { name, value, autofocus, onChange } = this.props;\n      if (this.input.value !== value) {\n        // @ts-ignore\n        onChange({ target: { name, value: this.input.value } });\n      }\n      if (autofocus) {\n        this.input.focus();\n      }\n    }\n  }\n\n  public override shouldComponentUpdate({ value }: Props, { focused }: State) {\n    if (value !== this.props.value) return true;\n    if (focused !== this.state.focused) return true;\n    return false;\n  }\n\n  public override componentDidUpdate() {\n    if (!!this.props.value && !this.state.focused) {\n      this.setState({ focused: true });\n    }\n  }\n\n  private onFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  private onBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  private cache = (input: HTMLInputElement) => {\n    this.input = input;\n  };\n\n  public override render() {\n    const { focused } = this.state;\n    const { name, id = name, type, value, onChange } = this.props;\n    return (\n      <div className={`login-input ${focused ? \"focus\" : \"\"}`}>\n        <label htmlFor={id}>{name}</label>\n        <input\n          id={id}\n          name={name}\n          type={type}\n          value={value}\n          ref={this.cache}\n          onChange={onChange}\n          onBlur={this.onBlur}\n          onFocus={this.onFocus}\n        />\n      </div>\n    );\n  }\n}\n\ninterface Props {\n  id?: string;\n  name: string;\n  value: string;\n  autofocus?: boolean;\n  type?: HTMLInputTypeAttribute;\n  onChange: ChangeEventHandler<HTMLInputElement>;\n}\n\ninterface State {\n  focused: boolean;\n}\n","import type { PropLess } from \"Tools/Types\";\nimport React, { Component } from \"react\";\nimport \"./styles.scss\";\n\nexport class BasicLoader extends Component<PropLess> {\n  override shouldComponentUpdate() {\n    return false;\n  }\n\n  public override render() {\n    return (\n      <div className=\"basic-loader\">\n        <svg viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n          <circle\n            cx=\"50\"\n            cy=\"50\"\n            r=\"32\"\n            strokeWidth=\"8\"\n            stroke=\"#ffffff\"\n            strokeDasharray=\"50.26548245743669 50.26548245743669\"\n            fill=\"none\"\n            strokeLinecap=\"round\">\n            <animateTransform\n              attributeName=\"transform\"\n              type=\"rotate\"\n              repeatCount=\"indefinite\"\n              dur=\"1s\"\n              keyTimes=\"0;1\"\n              values=\"0 50 50;360 50 50\"\n            />\n          </circle>\n        </svg>\n      </div>\n    );\n  }\n}\n"],"names":["LoginInput","Component","constructor","super","arguments","__publicField","this","focused","props","value","setState","input","componentDidMount","name","autofocus","onChange","target","focus","shouldComponentUpdate","state","componentDidUpdate","render","id","type","className","children","jsx","htmlFor","jsxRuntimeExports","ref","cache","onBlur","onFocus","BasicLoader","viewBox","preserveAspectRatio","cx","cy","r","strokeWidth","stroke","strokeDasharray","fill","strokeLinecap","attributeName","repeatCount","dur","keyTimes","values"],"mappings":"+MAIO,MAAMA,UAAmBC,EAAAA,UAAzB,WAAAC,GAAAC,SAAAC,WACGC,EAAAC,KAAA,SACDD,EAAAC,KAAA,QAAe,CAAEC,UAAWD,KAAKE,MAAMC,QA+BtCJ,EAAAC,KAAA,WAAU,KAChBA,KAAKI,SAAS,CAAEH,SAAS,GAAM,IAGzBF,EAAAC,KAAA,UAAS,KACfA,KAAKI,SAAS,CAAEH,SAAS,GAAO,IAG1BF,EAAAC,KAAA,SAASK,IACfL,KAAKK,MAAQA,CAAA,GAAA,CAlCC,iBAAAC,GACd,GAAIN,KAAKK,MAAO,CACd,MAAME,KAAEA,EAAMJ,MAAAA,EAAAK,UAAOA,EAAWC,SAAAA,GAAaT,KAAKE,MAC9CF,KAAKK,MAAMF,QAAUA,GAEdM,EAAA,CAAEC,OAAQ,CAAEH,OAAMJ,MAAOH,KAAKK,MAAMF,SAE3CK,GACFR,KAAKK,MAAMM,OAEf,CACF,CAEgB,qBAAAC,EAAsBT,MAAEA,IAAgBF,QAAEA,IACpD,OAAAE,IAAUH,KAAKE,MAAMC,OACrBF,IAAYD,KAAKa,MAAMZ,OAE7B,CAEgB,kBAAAa,GACRd,KAAKE,MAAMC,QAAUH,KAAKa,MAAMZ,SACpCD,KAAKI,SAAS,CAAEH,SAAS,GAE7B,CAcgB,MAAAc,GACR,MAAAd,QAAEA,GAAYD,KAAKa,OACnBN,KAAEA,KAAMS,EAAKT,EAAAU,KAAMA,QAAMd,EAAOM,SAAAA,GAAaT,KAAKE,oBAErD,MAAI,CAAAgB,UAAW,gBAAejB,EAAU,QAAU,IACjDkB,SAAA,CAACC,EAAAA,IAAA,QAAA,CAAMC,QAASL,EAAKG,SAAKZ,IAC1Be,EAAAF,IAAC,QAAA,CACCJ,KACAT,OACAU,OACAd,QACAoB,IAAKvB,KAAKwB,MACVf,WACAgB,OAAQzB,KAAKyB,OACbC,QAAS1B,KAAK0B,YAItB,EA5DA3B,EAHWL,EAGG,eAAe,CAC3BS,MAAO,GACPc,KAAM,SCLH,MAAMU,UAAoBhC,EAAAA,UACtB,qBAAAiB,GACA,OAAA,CACT,CAEgB,MAAAG,GAEZ,SAAAK,IAAC,OAAIF,UAAU,eACbC,eAAC,MAAI,CAAAS,QAAQ,cAAcC,oBAAoB,WAC7CV,SAAAG,EAAAF,IAAC,SAAA,CACCU,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,YAAY,IACZC,OAAO,UACPC,gBAAgB,sCAChBC,KAAK,OACLC,cAAc,QACdlB,SAAAG,EAAAF,IAAC,mBAAA,CACCkB,cAAc,YACdrB,KAAK,SACLsB,YAAY,aACZC,IAAI,KACJC,SAAS,MACTC,OAAO,2BAMnB"}